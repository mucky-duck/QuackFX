<?xml version="1.0" encoding="utf-8"?>
<!--QuackFX-->
<includes>
	
	<include name="HomeQuackFX">
		
        <control type="image">
            <width>100%</width>
            <height>100%</height>
            <texture colordiffuse="$VAR[Netflix2_PanelColor]">colors/color_white.png</texture>
        </control>

        <!-- Home content -->
        <control type="group" id="9000">
            <!-- background image -->
            <control type="image">
                <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">Conditional</animation>
                <visible>[!Skin.HasSetting(NetflixHomeShowLargeThumb) | ControlGroup(505).HasFocus()]  + !Control.IsVisible(5633399)</visible>
                <fadetime>350</fadetime>
                <texture background="true">$INFO[Control.GetLabel(99004)]</texture>
                <aspectratio aligny="top">scale</aspectratio>
                <animation effect="fade" start="0" end="100" delay="0" time="1200">Visible</animation>
            </control>

            <!-- fullscreen trailer window -->
            <control type="group" id="5633399">
                <visible>Player.HasVideo + [ControlGroup(505).HasFocus() | Control(53).HasFocus() | !Skin.HasSetting(NetflixHomeShowLargeThumb)]</visible>
                <width>100%</width>
                <height>100%</height>
                <animation effect="slide" start="0" end="0,-80" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
                <control type="videowindow"/>
            </control>
            <!--fullscreen trailer fade in -->
            <control type="image">
                <visible>Control.IsVisible(5633399)</visible>
                <width>100%</width>
                <height>100%</height>
                <colordiffuse>$VAR[Netflix2_PanelColor]</colordiffuse>
                <texture border="15">diffuse/bgpanel.png</texture>
                <animation effect="fade" start="100" end="0" delay="0" time="3000">Visible</animation>
                <animation effect="fade" start="50" end="0" delay="0" time="1500">Hidden</animation>
            </control>

            <!-- spotlight overlay -->
            <control type="image">
                <visible>ControlGroup(505).HasFocus()</visible>
                <width>100%</width>
                <height>100%</height>
                <colordiffuse>$VAR[Netflix2_PanelColor]</colordiffuse>
                <texture border="15">overlay/Vignette.png</texture>
            </control>

            <!-- MPAA flag while spotlight playing -->
            <control type="group">
                <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">Conditional</animation>
                <visible>Control.IsVisible(5633399) + !String.IsEmpty(Control.GetLabel(5633398))</visible>
                <right>-160</right>
                <top>675</top>
                <height>55</height>
                <width>160</width>
                <animation type="VisibleChange">
                <effect type="slide" start="0" end="-160" delay="6000" time="400"/>
                <effect type="fade" start="0" end="100" delay="6000" time="400"/>
                </animation>
                <control type="image">
                    <height>55</height>
                    <width>160</width>
                    <texture colordiffuse="NetflixDetailsFlagColor">colors/color_white.png</texture>
                </control>
                <control type="label" id="5633398">
                    <left>30</left>
                    <height>55</height>
                    <width>130</width>
                    <align>left</align>
                    <font>Reg28</font>
                    <textcolor>white</textcolor>
                    <label>$VAR[GetMPAA]</label>
                </control>
            </control>

            <!-- overlay with big thumb-->
            <control type="image">
                <visible>Skin.HasSetting(NetflixHomeShowLargeThumb) + !ControlGroup(505).HasFocus()</visible>
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="$VAR[Netflix2_PanelColor]">colors/color_white.png</texture>
                <animation effect="fade" start="100" end="90" delay="0" time="400">Visible</animation>
                <animation effect="fade" start="90" end="0" delay="0" time="1200">Hidden</animation>
            </control>

            <!-- overlay without big thumb -->
            <control type="image">
                <visible>!Skin.HasSetting(NetflixHomeShowLargeThumb)</visible>
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="$VAR[Netflix2_PanelColor]">colors/color_white.png</texture>
                <animation effect="fade" start="100" end="70" delay="0" time="0"  condition="true">Conditional</animation>
                <animation effect="fade" start="70" end="40" delay="0" time="6000" condition="Control.IsVisible(5633399)">Conditional</animation>
            </control>
            <control type="image">
                <visible>!Skin.HasSetting(NetflixHomeShowLargeThumb)</visible>
                <width>100%</width>
                <height>100%</height>
                <texture colordiffuse="$VAR[Netflix2_PanelColor]">overlay/Side_by_Side.png</texture>
                <animation effect="fade" start="100" end="95" delay="0" time="0"  condition="true">Conditional</animation>
                <animation effect="fade" start="95" end="30" delay="0" time="6000" condition="Control.IsVisible(5633399)">Conditional</animation>
            </control>

            <!-- spotlight section -->
            <control type="group" id="3505">
                <width>1920</width>
                <height>525</height>
                <visible>![Skin.HasSetting(NetflixHomeDisableFirstRow) + Skin.String(HomeLayout,netflix2) + Window.IsActive(Home)]</visible>

                <!-- hidden button to spotlight buttons -->
                <control type="button" id="53">
                    <visible allowhiddenfocus="true">false</visible>
                    <include>HiddenObject</include>
                    <!-- on first load -->
                    <onfocus condition="Skin.HasSetting(SpotLightTrailers) + String.IsEmpty(Window(Home).Property(SpotlightFirstPlayDone))
                     + !Player.HasVideo + !String.IsEmpty(Container(1508).ListItem.Trailer)">PlayMedia($ESCINFO[Container(1508).ListItem.Trailer],1)</onfocus>
                    <onfocus condition="Skin.String(AutoYoutubeTrailer,true) + Skin.HasSetting(SpotLightTrailers) + String.IsEmpty(Window(Home).Property(SpotlightFirstPlayDone))
                     + !Player.HasVideo + [[String.IsEqual(Container(1508).ListItem.DBType,tvshow) | String.IsEqual(Container(1508).ListItem.Property(DBTYPE),tvshow)] | [String.IsEqual(Container(1508).ListItem.DBType,movie) + String.IsEmpty(Container(1508).ListItem.Trailer)]]">
                        RunScript(script.skin.helper.service,action=playtraileryoutube,title=$INFO[Container(1508).ListItem.Title])</onfocus>
                    <!-- not first load -->
                    <onfocus condition="Skin.HasSetting(SpotLightTrailers) + !String.IsEmpty(Window(Home).Property(SpotlightFirstPlayDone))
                     + !Player.HasVideo + !String.IsEmpty(Container(1508).ListItem.Trailer)">AlarmClock(trailer_delay,PlayMedia($ESCINFO[Container(1508).ListItem.Trailer],1),00:08,silent)</onfocus>
                    <onfocus condition="Skin.String(AutoYoutubeTrailer,true) + Skin.HasSetting(SpotLightTrailers) + !String.IsEmpty(Window(Home).Property(SpotlightFirstPlayDone))
                     + !Player.HasVideo + [[String.IsEqual(Container(1508).ListItem.DBType,tvshow) | String.IsEqual(Container(1508).ListItem.Property(DBTYPE),tvshow)] | [String.IsEqual(Container(1508).ListItem.DBType,movie) + String.IsEmpty(Container(1508).ListItem.Trailer)]]">
                        AlarmClock(trailer_delay,RunScript(script.skin.helper.service,action=playtraileryoutube,title=$INFO[Container(1508).ListItem.Title]),00:07,silent)</onfocus>
                    <onunfocus condition="String.IsEmpty(Window(Home).Property(SpotlightFirstPlayDone))">SetProperty(SpotlightFirstPlayDone,Done,Home)</onunfocus>
                    <onfocus>SetFocus(505)</onfocus>
                    <!-- workaround to fix stuck on '53' after setting widgets in hubs -->
                    <onunfocus condition="System.HasAlarm(focus_delay)">CancelAlarm(focus_delay,true)</onunfocus>
                    <onfocus condition="!Skin.HasSetting(LockHubWidgets) + [Window.IsActive(3018) | Window.IsActive(3017) | Window.IsActive(3020) | Window.IsActive(3021)]">
                        AlarmClock(focus_delay,SetFocus(505),00:01,silent)</onfocus>
                </control>

                <!-- spotlight buttons -->
                <!-- contains hardcoded colors -->
                <control type="grouplist" id="505">
                    <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">Conditional</animation>
                    <visible allowhiddenfocus="true">ControlGroup(505).HasFocus() +  Integer.IsGreater(Container(1508).NumItems,0)</visible>
                    <animation effect="slide" end="-1000" condition="!ControlGroup(505).HasFocus">Conditional</animation>
                    <orientation>horizontal</orientation>
                    <bottom>65</bottom>
                    <left>65</left>
                    <width>600</width>
                    <height>65</height>
                    <itemgap>15</itemgap>
                    <onback condition="Window.IsActive(Home) | Window.IsActive(3017) | Window.IsActive(3018) | Window.IsActive(3020)">300</onback>
                    <onback condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onback>
                    <onup condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onup>
                    <onup condition="Player.HasVideo + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]">PlayerControl(Stop)</onup>
                    <onup>77777</onup>
                    <ondown condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</ondown>
                    <ondown condition="Player.HasVideo + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]">PlayerControl(Stop)</ondown>
                    <ondown>77777</ondown>
                    <onleft>505</onleft>
                    <onright>505</onright>
                    <animation effect="fade" start="20" end="100" time="1000" delay="100" condition="ControlGroup(505).HasFocus()">Conditional</animation>
                    <control type="radiobutton" id="51">
                        <!-- play -->
                        <visible>String.IsEqual(Container(1508).ListItem.DBType,video) | String.IsEqual(Container(1508).ListItem.DBType,movie) | String.IsEqual(Container(1508).ListItem.Property(DBTYPE),movie)
                            | String.IsEqual(Container(1508).ListItem.DBType,episode) | String.IsEqual(Container(1508).ListItem.Property(DBTYPE),episode)</visible>
                        <description>Play</description>
                        <width>220</width>
                        <height>100%</height>
                        <label>$LOCALIZE[208]</label>
                        <align>center</align>
                        <textcolor>ButtonTextColor</textcolor>
                        <focusedcolor>ButtonFocusTextColor</focusedcolor>
                        <texturefocus colordiffuse="ButtonFocusColor" border="5">diffuse/panel.png</texturefocus>
                        <texturenofocus colordiffuse="ButtonColor" border="5">diffuse/panel.png</texturenofocus>
                        <textureradioonfocus colordiffuse="ButtonColor">play.png</textureradioonfocus>
                        <textureradioofffocus colordiffuse="ButtonColor">play.png</textureradioofffocus>
                        <textureradioonnofocus colordiffuse="ViewDetailsTextColor">play.png</textureradioonnofocus>
                        <textureradiooffnofocus colordiffuse="ViewDetailsTextColor">play.png</textureradiooffnofocus>
                        <radioposx>45</radioposx>
                        <radiowidth>25</radiowidth>
                        <radioheight>35</radioheight>
                        <font>Button</font>
                        <onclick>PlayMedia($ESCINFO[Container(1508).ListItem.FileNameAndPath])</onclick>
                    </control>
                    <control type="button" id="52">
                        <!-- more info -->
                        <description>Info</description>
                        <width>250</width>
                        <height>100%</height>
                        <align>center</align>
                        <label>$LOCALIZE[29915]</label>
                        <textcolor>ButtonTextColor</textcolor>
                        <focusedcolor>ButtonFocusTextColor</focusedcolor>
                        <texturefocus colordiffuse="ButtonFocusColor" border="5">diffuse/panel.png</texturefocus>
                        <texturenofocus colordiffuse="ButtonColor" border="5">diffuse/panel.png</texturenofocus>
                        <font>Button</font>
                        <onclick>SetProperty(ShowSpotlightInfo,Show,Home)</onclick>
                        <onclick>SetFocus(1508)</onclick>
                    </control>
                </control>

                <!-- trailer window -->
                <control type="group" id="563340">
                    <visible>Player.HasVideo + Skin.HasSetting(NetflixHomeShowLargeThumb) + ![ControlGroup(505).HasFocus() | Control.HasFocus(53)]</visible>
                    <top>0</top>
                    <right>0</right>
                    <width>1220</width>
                    <height>680</height>
                    <animation effect="slide" start="0" end="0,-80" time="0" condition="Integer.IsEqual(VideoPlayer.VideoAspect,2.4) | Integer.IsEqual(VideoPlayer.VideoAspect,2.35) | Integer.IsEqual(VideoPlayer.VideoAspect,2.55) | Integer.IsEqual(VideoPlayer.VideoAspect,2.76)" reversible="true">Conditional</animation>
                    <control type="videowindow"/>
                    <control type="image">
                        <texture colordiffuse="$VAR[Netflix2_PanelColor]" border="20">overlay/netflix_corner.png</texture>
                    </control>
                </control>
                <!--trailer window fades in -->
                <control type="image">
                    <visible>Control.IsVisible(563340)</visible>
                    <top>0</top>
                    <right>0</right>
                    <width>1410</width>
                    <height>790</height>
                    <aligny>top</aligny>
                    <aspectratio>scale</aspectratio>
                    <colordiffuse>$VAR[Netflix2_PanelColor]</colordiffuse>
                    <texture border="15">diffuse/bgpanel.png</texture>
                    <animation type="Visible">
                    <effect type="fade" start="100" end="100" time="600"/>
                    <effect type="fade" start="100" end="0" time="1200" delay="800"/>
                    </animation>
                </control>

                <!-- spotlight image [16:9] -->
                <control type="image">
                    <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">Conditional</animation>
                    <visible>Skin.HasSetting(NetflixHomeShowLargeThumb) + !ControlGroup(505).HasFocus() + !Player.HasVideo</visible>
                    <right>0</right>
                    <top>0</top>
                    <texture background="true" diffuse="overlay/Right_Corner.png">$INFO[Control.GetLabel(99004)]</texture>
                    <fadetime>550</fadetime>
                    <width>1280</width>
                    <height>780</height>
                    <aspectratio>scale</aspectratio>
                    <aspectratio scalediffuse="true" aligny="top">scale</aspectratio>
                    <animation effect="fade" end="0" time="600">Hidden</animation>
                    <animation effect="fade" start="0" end="100" time="1400">Visible</animation>
                </control>

                <!-- netflix details -->
                <control type="grouplist">
                    <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">Conditional</animation>
                    <width>650</width>
                    <posx>15</posx>
                    <posy>0</posy>
                    <height>680</height>
                    <orientation>vertical</orientation>
                    <usecontrolcoords>true</usecontrolcoords>
                    <itemgap>10</itemgap>
                    <!-- adjust for episode info -->
                    <animation effect="slide" start="0" end="0,75" time="0" condition="Control.IsVisible(588688) + !Control.IsVisible(5444322)">Conditional</animation>

                    <!-- Title -->
                    <!-- clearlogo [800x310] -->
                    <control type="image" id="29475">
                        <visible>!Skin.HasSetting(NoClearLogoNetflix) + !String.IsEmpty(Control.GetLabel(29475))</visible>
                        <height max="230">auto</height>
                        <width max="650">auto</width>
                        <align>left</align>
                        <aspectratio align="left" aligny="center">keep</aspectratio>
                        <texture background="true">$VAR[HomeNetflixInfoClearlogo]</texture>
                        <!-- adjust for spotlight -->
                        <animation effect="slide" start="0" end="0,137" time="0" condition="ControlGroup(505).HasFocus()">Conditional</animation>
                    </control>
                    <!-- text title -->
                    <control type="textbox" id="29476">
                        <visible>String.IsEmpty(Control.GetLabel(29475)) | Skin.HasSetting(NoClearLogoNetflix)</visible>
                        <top>55</top>
                        <height max="230">auto</height>
                        <width max="650">auto</width>
                        <font>TitleText</font>
                        <align>center</align>
                        <aligny>center</aligny>
                        <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
                        <textcolor>ViewDetailsHighlightTextColor</textcolor>
                        <label>$VAR[HomeMenuWidgetInfoLabel]</label>
						<animation effect="fade" time="200">Visible</animation>
                        <!-- adjust for spotlight -->
                        <animation effect="slide" start="0" end="0,155" time="0" condition="ControlGroup(505).HasFocus()">Conditional</animation>
                    </control>

                    <!-- spotlight row details -->
                    <control type="group">
                        <visible>!ControlGroup(505).HasFocus() + !Control.IsVisible(5633399)</visible>
                        <width>650</width>
                        <height>40</height>
                        <include>Default_Fade</include>
                        <include>SpotlightRowDetails</include>
                    </control>

                    <!-- netflix sublabel -->
                    <control type="label" id="823">
                        <visible>!String.IsEqual(Window(Home).Property(ListItem.dbtype),episode) + !String.IsEmpty(Control.GetLabel(823))</visible>
                        <height>30</height>
                        <width>650</width>
                        <font>SubLabel</font>
                        <align>left</align>
                        <aligny>center</aligny>
                        <textcolor>ViewDetailsTextColor</textcolor>
                        <label>$VAR[NetflixSublabel]</label>
                        <!-- adjust for spotlight -->
                        <animation effect="slide" start="0" end="0,225" time="0" condition="ControlGroup(505).HasFocus() + Control.IsVisible(29475)">Conditional</animation>
                        <animation effect="slide" start="0" end="0,340" time="0" condition="ControlGroup(505).HasFocus() + Control.IsVisible(29476)">Conditional</animation>
                        <include>Default_Fade</include>
                    </control>

                    <!-- episode info -->
                    <control type="grouplist" id="588688">
                        <visible>String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode) | String.IsEqual(Window(Home).Property(ListItem.DBTYPE,episode)) | String.IsEqual(Window(Home).Property(ListItem.Property(DBTYPE)),episode)</visible>
                        <orientation>vertical</orientation>
                        <height>125</height>
                        <width>650</width>
                        <include>Default_Fade</include>
                        <!-- season x episode x & title -->
                        <control type="label">
                            <height>85</height>
                            <width>650</width>
                            <font>EpisodeInfo</font>
                            <align>left</align>
                            <aligny>center</aligny>
                            <textcolor>ViewDetailsTextColor</textcolor>
                            <label>$VAR[NetflixEpisodeInfoLabel]</label>
                        </control>
                        <!-- progress bar & continue label -->
                        <control type="group">
                            <visible>Integer.IsGreater(ListItem.PercentPlayed,0)</visible>
                            <width>650</width>
                            <height>40</height>
                            <aligny>center</aligny>
                            <!-- Progress bar -->
                            <control type="progress">
                                <description>progress bar</description>
                                <top>11</top>
                                <width>150</width>
                                <height>8</height>
                                <align>left</align>
                                <texturebg colordiffuse="OSDProgressBarBorderColor" border="2">colors/color_white.png</texturebg>
                                <lefttexture/>
                                <midtexture colordiffuse="OSDProgressBarColor" border="2">colors/color_white.png</midtexture>
                                <righttexture/>
                                <info>ListItem.PercentPlayed</info>
                            </control>
                            <!--continue watching -->
                            <control type="label">
                                <left>175</left>
                                <height>30</height>
                                <width>600</width>
                                <textcolor>ViewDetailsTextColor</textcolor>
                                <label>[CAPITALIZE]$LOCALIZE[31535][/CAPITALIZE]</label>
                            </control>
                        </control>
                    </control>
                    
                    <!-- plot -->
                    <control type="textbox" id="5444322">
                        <visible>![[String.IsEqual(ListItem.DBTYPE,episode) | String.IsEqual(ListItem.Property(DBTYPE),episode)] +
                            [Integer.IsGreater(ListItem.PercentPlayed,0) | ![Integer.IsGreater(ListItem.PlayCount,0) + !ListItem.IsResumable]] +
                            !Skin.HasSetting(ShowEpisodesPlotAll)]</visible>
                        <height min="50" max="250">auto</height>
                        <width>650</width>
                        <textcolor>$VAR[NetflixPlotTextColor]</textcolor>
                        <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
                        <align>justify</align>
                        <font>Plot</font>
                        <label>$VAR[HomeMenuWidgetInfoPlot]</label>
                        <!-- spotlight adjustments -->
                        <animation effect="slide" start="0" end="0,230" time="0" condition="ControlGroup(505).HasFocus() + Control.IsVisible(29475)">Conditional</animation>
                        <animation effect="slide" start="0" end="0,345" time="0" condition="ControlGroup(505).HasFocus() + Control.IsVisible(29476)">Conditional</animation>
                        <animation effect="fade" start="100" end="0" time="600" condition="[String.IsEmpty(Window(Home).Property(SpotlightFirstPlayDone)) + ControlGroup(505).HasFocus()] | Control.IsVisible(5633399)">Conditional</animation>
                        <include>Default_Fade</include>
                    </control>

                    <!-- additional info -->
                    <control type="group">
                        <height>30</height>
                        <width>650</width>
                        <visible>!String.IsEmpty(Control.GetLabel(84)) + !Control.IsVisible(588688) + ![ControlGroup(505).HasFocus() | [!Skin.HasSetting(NetflixHomeShowLargeThumb) + Control.IsVisible(5633399)]]</visible>
                        <include>Default_Fade</include>
                        <control type="image">
                            <width>30</width>
                            <height>30</height>
                            <aligny>center</aligny>
                            <texture>fact.png</texture>
                            <colordiffuse>ViewDetailsHighlightTextColor</colordiffuse>
                        </control>
                        <control type="label" id="84">
                            <left>40</left>
                            <height>30</height>
                            <width>650</width>
                            <label>$VAR[NetflixMoreDetails]</label>
                            <textcolor>NetflixSecondaryTextColor</textcolor>
                            <align>left</align>
                            <aligny>center</aligny>
                            <font>MoreDetails</font>
                        </control>
                    </control>
                </control>

                <!-- ratings & studio -->
                <control type="group">
                    <visible>!Skin.HasSetting(NoFooterBarOnHome)</visible>
                    <right>30</right>
                    <top>575</top>
                    <height>50</height>
                    <width>1000</width>
                    <include condition="Skin.HasSetting(EnableWhiteRatingInHome)">AltRatingWhiteHome</include>
                    <include condition="!Skin.HasSetting(EnableWhiteRatingInHome)">AltRatingColorHome</include>
                    <!-- adjustments for spotlight -->
                    <animation effect="slide" start="0" end="0,210" time="600"  condition="Control.IsVisible(5633399) | ControlGroup(505).HasFocus()">Conditional</animation>
                    <animation effect="fade" start="100" end="0" time="600"  condition="[Control.IsVisible(5633399) | ControlGroup(505).HasFocus() | Control.IsVisible(563340)] + Skin.HasSetting(HideMediaFlagsTrailer)">Conditional</animation>
                </control>

            </control>

            <!-- Touch Menu Buttons -->
            <control type="radiobutton" id="51">
                <visible>Skin.HasSetting(EnableTouchSupport) + Window.IsActive(Home)</visible>
                <width>60</width>
                <height>60</height>
                <right>20</right>
                <top>20</top>
                <font/>
                <selected>Control.HasFocus(51)</selected>
                <texturefocus/>
                <texturenofocus/>
                <textureradiofocus colordiffuse="HomeViewDetailsFocusColor">common/menu.png</textureradiofocus>
                <textureradionofocus colordiffuse="ViewDetailsTextColor">common/menu.png</textureradionofocus>
                <radiowidth>60</radiowidth>
                <radioheight>60</radioheight>
                <onclick condition="!String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">SetProperty(ShowViewSubMenu, show, Home)</onclick>
                <onclick condition="String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">ClearProperty(ShowViewSubMenu, Home)</onclick>
                <onclick condition="!String.IsEqual(Window(Home).Property(ShowViewSubMenu),show)">SetFocus(300)</onclick>
                <ondown>510</ondown>
            </control>
            <control type="radiobutton" id="52">
                <visible>Skin.HasSetting(EnableTouchSupport) + !Window.IsActive(Home)</visible>
                <width>60</width>
                <height>60</height>
                <right>20</right>
                <top>20</top>
                <font/>
                <selected>Control.HasFocus(52)</selected>
                <texturefocus/>
                <texturenofocus/>
                <textureradiofocus colordiffuse="HomeViewDetailsFocusColor">touchcontrols/back.png</textureradiofocus>
                <textureradionofocus colordiffuse="ViewDetailsTextColor">touchcontrols/back.png</textureradionofocus>
                <radiowidth>60</radiowidth>
                <radioheight>60</radioheight>
                <onclick>Close</onclick>
                <ondown>510</ondown>
            </control>

            <!-- all widgets -->
            <control type="grouplist" id="77777">
                <animation time="300" effect="fade" start="100" end="20" reversible="true" easing="inout" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">Conditional</animation>
                <!-- adjustments for scrollbar & zoom effect -->
                <animation effect="slide" end="10" condition="Skin.HasSetting(WidgetsZoomFocus)">Conditional</animation>
                <animation effect="slide" end="30" condition="Control.IsVisible(317)">Conditional</animation>
                <!-- spotlight slide-down -->
                <animation effect="slide" end="0,210" time="600" condition="[ControlGroup(505).HasFocus() + Integer.IsGreater(Container(1508).NumItems,0)] | [!Skin.HasSetting(NetflixHomeShowLargeThumb) + Control.IsVisible(5633399)]">Conditional</animation>
                <posx>0</posx>
                <usecontrolcoords>true</usecontrolcoords>
                <bottom>5</bottom>
                <height>425</height>
                <include condition="Skin.HasSetting(NetflixHomeDisableFirstRow)">NetflixHome_AltHeight_NoSpotlight</include>
                <posy>680</posy>
                <itemgap>2</itemgap>
                <width>100%</width>
                <ondown>77777</ondown>
                <onup>77777</onup>
                <onback condition="Window.IsActive(Home) | Window.IsActive(3017) | Window.IsActive(3018) | Window.IsActive(3020) | Window.IsActive(3021)">300</onback>
                <onleft condition="!Skin.HasSetting(EnhancedHome_Circular) | ![Window.IsActive(Home) | Window.IsActive(3017) | Window.IsActive(3018) | Window.IsActive(3020) | Window.IsActive(3021)]">300</onleft>
                <pagecontrol>317</pagecontrol>
                <include condition="[Window.IsActive(Home) | Window.IsActive(3017) | Window.IsActive(3018) | Window.IsActive(3020)] + !Skin.HasSetting(NetflixHomeDisableFirstRow) + !Skin.HasSetting(DisableSpotlightContent)">NetflixSpotlightWidget</include>
                <include condition="Window.IsActive(Home)">skinshortcuts-template-Widgets</include>
                <include condition="Window.IsActive(3018)">netflix_items_movies</include>
                <include condition="Window.IsActive(3017)">netflix_items_tvshows</include>
                <include condition="Window.IsActive(3020)">netflix_items_new</include>
                <include condition="Window.IsActive(3021)">netflix_items_mylist</include>
            </control>

            <!-- busy image while spotlight widget loading -->
            <control type="grouplist">
                <visible>Control.HasFocus(1508) + Control.IsVisible(1508) + Container(1508).IsUpdating</visible>
                <orientation>horizontal</orientation>
                <left>65</left>
                <top>10</top>
                <width>500</width>
                <height>60</height>
                <itemgap>20</itemgap>
                <control type="multiimage">
                    <width>36</width>
                    <height>36</height>
                    <aspectratio>keep</aspectratio>
                    <imagepath background="true">widgets/widgets-busy-loader/</imagepath>
                    <timeperimage>35</timeperimage>
                    <colordiffuse>SpinnerTextureColor</colordiffuse>
                    <fadetime>0</fadetime>
                </control>
                <control type="label">
                    <height>60</height>
                    <aligny>top</aligny>
                    <width>420</width>
                    <label>$LOCALIZE[31185]</label>
                    <font>MoreDetails</font>
                    <textcolor>ViewDetailsTextColor</textcolor>
                    <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
                </control>
            </control>

            <!-- gradient overlays on widgets -->
            <control type="group">
                <visible>!ControlGroup(505).HasFocus() + !Control.IsVisible(5633399)</visible>
                <!--bottom gradient-->
                <control type="image">
                    <bottom>0</bottom>
                    <height>480</height>
                    <width>100%</width>
                    <aspectratio scalediffuse="true">scale</aspectratio>
                    <texture border="15" background="true">overlay/gradient_bottom.png</texture>
                </control>
                <!--right gradient for cropped widgets-->
                <control type="image">
                    <bottom>0</bottom>
                    <right>0</right>
                    <height>462</height>
                    <width>83</width>
                    <aspectratio scalediffuse="true">scale</aspectratio>
                    <texture border="15" background="true">overlay/gradient_left.png</texture>
                </control>
            </control>
            
            <control type="scrollbar" id="317">
                <visible>Skin.HasSetting(EnableTouchSupport) | Skin.HasSetting(alwaysShowScrollbars)</visible>
                <include condition="Skin.HasSetting(NetflixHomeDisableFirstRow)">NetflixHome_AltHeight_NoSpotlight</include>
                <top>600</top>
                <left>0</left>
                <bottom>0</bottom>
                <onleft>77777</onleft>
                <onright>300</onright>
                <showonepage>false</showonepage>
            </control>
        </control>
		
        <!-- Header -->
		<include>Header</include>
        
        <!-- Side Menu -->
        <include>SideBladeMainMenu</include>
    </include>

    <!-- Netflix2 Panel Color -->
    <variable name="Netflix2_PanelColor">
        <value condition="Skin.String(ViewDetailsPanelColor.base)">$INFO[Skin.String(ViewDetailsPanelColor.base)]</value>
        <value>ff000000</value>
    </variable>

    <!-- Netflix2 Panel Diffuse -->
    <variable name="Netflix2_PanelDiffuse">
        <value condition="Skin.String(ViewDetailsPanelColor.base)">ViewDetailsPanelColor</value>
        <value>ee181818</value>
    </variable>

    <!-- Netflix Plot Textcolor -->
    <variable name="NetflixPlotTextColor">
        <value condition="ControlGroup(505).HasFocus()">ViewDetailsTextColor</value>
        <value>NetflixPrimaryTextColor</value>
    </variable>

    <!-- Disabled Spotlight Widgets Height -->
    <include name="NetflixHome_AltHeight_NoSpotlight">
        <top>0</top>
        <height>100%</height>
    </include>

    <!-- netflix2 spotlight widget -->
    <include name="NetflixSpotlightWidget">
        <control type="panel" id="1508">
            <orientation>horizontal</orientation>
            <preloaditems>1</preloaditems>
            <itemlayout width="1920" height="210">
            </itemlayout>
            <focusedlayout width="1920" height="210">
                <control type="button">
                    <visible allowhiddenfocus="true">false</visible>
                    <onfocus condition="!Skin.HasSetting(AutoShowSubmenu)">ClearProperty(submenu)</onfocus>
                    <onfocus>ClearProperty(ShowViewSubMenu,Home)</onfocus>
                    <onfocus>SetProperty(ShowWidget,show)</onfocus>
                    <onfocus>SetProperty(widgetstyle,spotlight)</onfocus>
                    <onfocus>SetProperty(SkinHelper.WidgetContainer,1508,home)</onfocus>
                    <onfocus>SetProperty(LastFocusWidgetPos,$INFO[Container(1508).CurrentItem],Home)</onfocus>
                    <!--show info RunScript(script.skin.helper.service,action=showinfo)-->
                    <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">Action(Info)</onfocus>
                    <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo)) + !String.IsEqual(ListItem.DBTYPE,movie) + String.IsEmpty(Container.ListItem.DBID)">ActivateWindow(10025,$ESCINFO[Container.ListItem.FileNameAndPath],return)</onfocus>
                    <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">SetFocus(505)</onfocus>
                    <onfocus condition="!String.IsEmpty(Window(Home).Property(ShowSpotlightInfo)) + String.IsEmpty(Container.ListItem.DBID)">ClearProperty(ShowSpotlightInfo,Home)</onfocus>
                    <!--show buttons-->
                    <onunfocus condition="System.HasAlarm(focus_delay)">CancelAlarm(focus_delay,true)</onunfocus>
                    <onfocus condition="String.IsEmpty(Window(Home).Property(ShowSpotlightInfo))">AlarmClock(focus_delay,SetFocus(53),00:02,silent)</onfocus>
                    <include name="WidgetProperties" content="WidgetProperties">
                        <param name="widgetid" value="1508" />
                    </include>
                </control>
            </focusedlayout>
            <content target="videos" limit="1">$VAR[Netflix2HomeSpotlightWidgetContent]</content>
            <!-- <content target="videos" sortby="dateadded" sortorder="descending" limit="1">$VAR[Netflix2HomeSpotlightWidgetContent]</content> -->
        </control>
    </include>

    <!-- Netflix1 Spotlight Content -->
    <variable name="NetFlixHomeSpotLightWidgetContent">
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItem.Property(widgetPath.99)) + !String.Contains(Container(300).ListItem.Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItem.Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(0).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(0).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(0).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(1).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(1).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(1).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(2).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(2).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(2).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(3).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(3).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(3).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(4).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(4).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(4).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(5).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(5).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(5).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(6).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(6).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(6).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(7).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(7).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(7).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(8).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(8).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(8).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(9).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(9).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(9).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(10).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(10).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(10).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(11).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(11).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(11).Property(widgetPath.99)]</value>
        <value condition="Skin.HasSetting(ShowAllWidgets) + !String.IsEmpty(Container(300).ListItemAbsolute(12).Property(widgetPath.99)) + !String.Contains(Container(300).ListItemAbsolute(12).Property(widgetPath.99),INCLUDE)">$INFO[Container(300).ListItemAbsolute(12).Property(widgetPath.99)]</value>
    </variable>

    <!-- Netflix2 Spotlight Content -->
    <variable name="Netflix2HomeSpotlightWidgetContent">
        <!-- movies hub -->
        <value condition="Window.IsActive(3018) + !String.IsEmpty(Skin.String(spotlightmovies.path))">$INFO[Skin.String(spotlightmovies.path)]</value>
        <value condition="Window.IsActive(3018)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=movies&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <!-- tvshows hub -->
        <value condition="Window.IsActive(3017) + !String.IsEmpty(Skin.String(spotlighttvshows.path))">$INFO[Skin.String(spotlighttvshows.path)]</value>
        <value condition="Window.IsActive(3017)">plugin://script.skin.helper.widgets/?action=similarshows&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <!-- new hub -->
        <value condition="Window.IsActive(3020) + !String.IsEmpty(Skin.String(spotlightnew.path))">$INFO[Skin.String(spotlightnew.path)]</value>
        <value condition="Window.IsActive(3020)">plugin://script.skin.helper.widgets/?action=recent&amp;mediatype=media&amp;tag=&amp;reload=$INFO[Window(Home).Property(widgetreload-movies)]</value>
        <!-- home -->
        <!-- custom home spotlight -->
        <value condition="!String.IsEmpty(Skin.String(spotlighthome.path))">$INFO[Skin.String(spotlighthome.path)]</value>
        <value condition="Skin.HasSetting(ExperimentalSpotlight)">plugin://script.skin.helper.widgets/?action=similar&amp;mediatype=media&amp;limit=5&amp;reload=$INFO[Window(Home).Property(widgetreload2)]</value>
        <value>$VAR[NetFlixHomeSpotLightWidgetContent]</value>
    </variable>

    <include name="SideBladeMainMenu">
        <control type="group" id="9001">
            <posx>-640</posx>
            <posy>0</posy>
            <visible>!Window.IsActive(virtualkeyboard)</visible>
            <animation type="Conditional" condition="[ControlGroup(9001).HasFocus() + window.isactive(home)] | ControlGroup(300).HasFocus() | String.IsEqual(Window(Home).Property(ShowViewSubMenu),show) | Control.HasFocus(300)">
                <effect type="slide" start="0" end="640" time="300" delay="0" tween="sine" easing="inout" />
                <effect type="fade" start="0" end="100" time="300" delay="0" tween="sine" easing="inout" />
            </animation>
            <!-- panel -->
            <control type="grouplist">
                <orientation>horizontal</orientation>
                <posy>2%</posy>
                <width>425</width>
                <height>98%</height>
                <itemgap>0</itemgap>
				<control type="image">
					<width>425</width>
                    <height>98%</height>
                    <texture border="100">common/side-blade.png</texture>
				</control>
                <!-- bg 
                <control type="image">
                    <width>404</width>
                    <height>110%</height>
                    <texture>colors/color_white.png</texture>
                    <colordiffuse>MainMenuPanelColor</colordiffuse>
                    <aspectratio>stretch</aspectratio>
                </control> -->
            </control>
			
			<!-- logo / user profile button -->
            <control type="group" id="40000">
                <visible>!Window.IsActive(notification) + !Window.IsActive(extendedprogressdialog) + !Control.IsVisible(88888)</visible>
				<posy>10%</posy>
                <width>200</width>
                <height>80</height>
                <animation effect="slide" end="0,60" condition="Control.IsVisible(1)">Conditional</animation>
                <include>animation_fade_visible_hidden</include>
                <!-- logo -->
                <control type="group" id="40000">
                    <visible>!Control.IsVisible(40001)</visible>
					<height>200</height>
                    <width>200</width>
                    <left>40%</left>
                    <!-- default Logo image -->
                    <control type="image">
                        <height>200</height>
                        <width>200</width>
                        <aspectratio align="left">keep</aspectratio>
                        <colordiffuse>HeaderTextColor</colordiffuse>
                        <texture background="true">special://skin/resources/icon.png</texture>
                        <visible>!Skin.String(CustomLogoImage)</visible>
                    </control>
                    <!-- custom Logo image -->
                    <control type="image">
                        <height>80</height>
                        <width>275</width>
                        <aspectratio align="left">keep</aspectratio>
                        <texture background="true">$INFO[Skin.String(CustomLogoImage)]</texture>
                        <visible>Skin.String(CustomLogoImage)</visible>
                    </control>
                </control>

                <!-- profile logo, label & switch button -->
                <control type="group" id="40001">
                    <visible>System.HasLoginScreen | Skin.HasSetting(DisableLogoMainMenu)</visible>
                    <height>60</height>
                    <control type="button" id="40002">
                        <!-- localize & hardcoded color -->
                        <label>$INFO[System.ProfileName][CR][COLOR ffc0c0c0]Switch Profiles[/COLOR]</label>
                        <textoffsetx>115</textoffsetx>
                        <align>left</align>
                        <width>384</width>
                        <height>60</height>
                        <font>Profile</font>
                        <ondown>300</ondown>
                        <onback>ClearProperty(ShowViewSubMenu, Home)</onback>
                        <onback>77777</onback>
                        <onright>ClearProperty(ShowViewSubMenu, Home)</onright>
                        <onright>77777</onright>
                        <textcolor>MainMenuTextColor</textcolor>
                        <focusedcolor>MainMenuFocusTextColor</focusedcolor>
                        <texturefocus colordiffuse="HomeViewDetailsFocusColor">colors/color_white.png</texturefocus>
                        <texturenofocus/>
                        <onclick>ClearProperty(ShowViewSubMenu, Home)</onclick>
                        <onclick>System.LogOff</onclick>
                    </control>
                    <control type="image">
                        <left>50</left>
                        <top>5</top>
                        <width>50</width>
                        <height>50</height>
                        <texture background="true">$INFO[System.ProfileThumb]</texture>
                    </control>
                </control>
            </control>

            <!--main menu 300-->
            <control type="list" id="300">
                <posy>30%</posy>
				<width>385</width>
                <height>53%</height>
                <itemgap>0</itemgap>
				<onfocus condition="System.HasAlarm(focus_delay)">CancelAlarm(focus_delay,true)</onfocus>
                <onright condition="Integer.IsGreater(Container(4445).NumItems,0)">4444</onright>
                <onright condition="!Integer.IsGreater(Container(4445).NumItems,0)">77777</onright>
                <onright condition="!Integer.IsGreater(Container(4445).NumItems,0)">ClearProperty(ShowViewSubMenu, Home)</onright>
                <onback>ClearProperty(ShowViewSubMenu, Home)</onback>
                <onback>77777</onback>
                <onup condition="Control.IsVisible(40002)">40002</onup>
                <ondown>40003</ondown>
                <orientation>vertical</orientation>
                <itemlayout height="80" width="385">
                    <!-- current window focus color -->
                    <control type="image">
                        <visible>[Window.IsActive(Home) + [String.Contains(ListItem.Property(path), home)]] | [Window.IsActive(3017) + [String.Contains(ListItem.Property(path), 3017)]]
                        | [Window.IsActive(3018) + [String.Contains(ListItem.Property(path), 3018)]] | [Window.IsActive(3020) + [String.Contains(ListItem.Property(path), 3020)]]
                        | [Window.IsActive(3021) + [String.Contains(ListItem.Property(path), 3021)]]</visible>
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>MainMenuSecondaryFocusButtonColor</colordiffuse>
                    </control>
                    <!-- menu item icon -->
                    <control type="group">
                        <visible>!Skin.HasSetting(DisableIconsMainMenu)</visible>
                        <left>50</left>
                        <height>100%</height>
                        <top>10</top>
                        <control type="image">
                            <width>55</width>
                            <height>55</height>
                            <texture background="true" fallback="$INFO[ListItem.Icon]">$INFO[ListItem.ActualIcon]</texture>
                            <colordiffuse>MainMenuTextColor</colordiffuse>
                            <animation end="70" effect="fade" time="0" delay="0" condition="true">Conditional</animation>
                        </control>
                    </control>
                    <!-- menu item label -->
                    <control type="label">
                        <width>230</width>
                        <height>100%</height>
                        <align>left</align>
                        <left>135</left>
                        <font>MenuItem</font>
                        <textcolor>MainMenuTextColor</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" end="-50" time="0" delay="0" condition="Skin.HasSetting(DisableIconsMainMenu)">Conditional</animation>
                    </control>
                </itemlayout>
                <focusedlayout height="55" width="375" condition="Control.HasFocus(300) | Control.HasFocus(4444)">
                    <!-- button focus color -->
                    <control type="image">
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>MainMenuFocusButtonColor</colordiffuse>
                    </control>
                    <!-- menu item icon -->
                    <control type="group">
                        <visible>!Skin.HasSetting(DisableIconsMainMenu)</visible>
                        <left>50</left>
                        <height>100%</height>
                        <control type="image">
                            <width>55</width>
                            <height>55</height>
                            <texture background="true" fallback="$INFO[ListItem.Icon]">$INFO[ListItem.ActualIcon]</texture>
                            <colordiffuse>MainMenuFocusTextColor</colordiffuse>
                            <animation end="70" effect="fade" time="0" delay="0" condition="true">Conditional</animation>
                        </control>
                    </control>
                    <!-- menu item label -->
                    <control type="label">
                        <width>230</width>
                        <height>100%</height>
                        <align>left</align>
                        <left>135</left>
                        <aligny>center</aligny>
                        <font>MenuItem</font>
                        <textcolor>MainMenuFocusTextColor</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" end="-50" time="0" delay="0" condition="Skin.HasSetting(DisableIconsMainMenu)">Conditional</animation>
                    </control>
                    
                    <!-- home behavior onfocus -->
                    <include>HiddenHomeMenuButton</include>
                </focusedlayout>
                <focusedlayout height="80" width="385" condition="![Control.HasFocus(300) | Control.HasFocus(4444)]">
                    <!-- menu item icon -->
                    <control type="group">
                        <visible>!Skin.HasSetting(DisableIconsMainMenu)</visible>
                        <left>50</left>
                        <height>100%</height>
                        <top>10</top>
                        <control type="image">
                            <width>55</width>
                            <height>55</height>
                            <texture background="true" fallback="$INFO[ListItem.Icon]">$INFO[ListItem.ActualIcon]</texture>
                            <colordiffuse>MainMenuTextColor</colordiffuse>
                            <animation end="70" effect="fade" time="0" delay="0" condition="true">Conditional</animation>
                        </control>
                    </control>
                    <!-- menu item label -->
                    <control type="label">
                        <width>230</width>
                        <height>100%</height>
                        <align>left</align>
                        <left>135</left>
                        <font>MenuItem</font>
                        <textcolor>MainMenuTextColor</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <animation effect="slide" end="-50" time="0" delay="0" condition="Skin.HasSetting(DisableIconsMainMenu)">Conditional</animation>
                    </control>
                    <!-- home behavior onfocus -->
                    <include>HiddenHomeMenuButton</include>
                </focusedlayout>
                <include condition="Window.IsActive(Home) | Window.IsActive(3020) | Window.IsActive(3021) | Window.IsActive(3018) | Window.IsActive(3017)">MainMenuContent</include>
            </control>
			
			<!-- exit button -->
            <control type="grouplist" id="40003">
                <orientation>vertical</orientation>
                <posy>86%</posy>
				<width>300</width>
                <height>115</height>
				<left>150</left>
				<onup>300</onup>
                <onright>ClearProperty(ShowViewSubMenu, Home)</onright>
                <onright>77777</onright>
                <onback>ClearProperty(ShowViewSubMenu, Home)</onback>
                <onback>77777</onback>
                <!-- exit button -->
                <control type="button" id="40005">
					<description>powerbutton</description>
                    <width>50</width>
                    <height>50</height>
					<texturefocus colordiffuse="HomeViewDetailsFocusColor">common/shutdown2.png</texturefocus>
					<texturenofocus colordiffuse="MainMenuTextColor">common/shutdown2.png</texturenofocus>
					<onclick>quit</onclick>
                </control>
            </control>
        </control>
        <include>SideBladeSubMenu</include>
    </include>

    <include name="SideBladeSubMenu">
        <!-- submenu -->
        <control type="group">
            <posx>425</posx>
            <posy>25%</posy>
            <animation type="Conditional" condition="Control.IsVisible(4444)">
                <effect type="fade" start="0" end="80" time="250" delay="0" />
                <effect type="slide" start="-10" end="0" time="200" delay="0" tween="cubic" easing="inout"/>
            </animation>
            <animation type="Conditional" condition="String.IsEmpty(Window(Home).Property(ShowViewSubMenu))">
                <effect type="slide" start="0" end="-800" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="!Control.IsVisible(4444) | Control.IsVisible(4446)">
                <effect type="fade" start="100" end="0" time="150" delay="0" />
            </animation>
            <animation type="Conditional" condition="!Control.IsVisible(4444) | Control.IsVisible(4446)">
                <effect type="slide" start="0" end="-300" time="5" delay="145" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(300).Position,0)">
                <effect type="slide" end="0,80" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(300).Position,1)">
                <effect type="slide" end="0,80" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(300).Position,2)">
                <effect type="slide" end="0,80" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(300).Position,3)">
                <effect type="slide" end="0,80" time="0" delay="0" />
            </animation>
            <animation type="Conditional" condition="Integer.IsGreater(Container(300).Position,4)">
                <effect type="slide" end="0,80" time="0" delay="0" />
            </animation>

            <!--Panel-->
            <control type="image">
				<posx>-35</posx>
                <posy>-80</posy>
                <width>380</width>
                <height>404</height>
                <texture border="100">common/side-blade.png</texture>
            </control>
            <control type="list" id="4444">
                <posx>-34</posx>
                <visible allowhiddenfocus="true">[String.IsEqual(Window(Home).Property(submenu),show) | Control.HasFocus(4444)] + Integer.IsGreater(Container(4445).NumItems,0) + !Control.IsVisible(4446)</visible>
                <visible>!Skin.HasSetting(DisableAllSubmenus)</visible>
                <width>360</width>
                <height>250</height>
                <itemgap>3</itemgap>
                <onleft>300</onleft>
                <onleft>ClearProperty(submenu,home)</onleft>
                <onright>ClearProperty(submenu,home)</onright>
                <onright>9000</onright>
                <onright>ClearProperty(ShowViewSubMenu, Home)</onright>
                <onup>4444</onup>
                <ondown>4444</ondown>
                <onback>300</onback>
                <onback>ClearProperty(submenu,home)</onback>
                <focusposition>0</focusposition>
                <movement>3</movement>
                <itemlayout width="360" height="50">
                    <control type="label">
                        <posx>10</posx>
                        <width>290</width>
                        <align>left</align>
                        <font>Submenu</font>
                        <height>50</height>
                        <textcolor>MainMenuTextColor</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                    </control>
                </itemlayout>
                <focusedlayout width="328" height="55">
                    <!-- <control type="image">
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>MainMenuSecondaryFocusButtonColor</colordiffuse>
                    </control> -->
					<control type="image">
						<!-- focus sub menu -->
                        <texture>colors/color_white.png</texture>
                        <colordiffuse>HomeViewDetailsFocusColor</colordiffuse>
                        <visible>Control.HasFocus(4444)</visible>
                    </control>
                    <control type="label">
                        <posx>10</posx>
                        <width>290</width>
                        <align>left</align>
                        <font>Submenu</font>
                        <height>50</height>
                        <textcolor>MainMenuFocusTextColor</textcolor>
                        <label>$INFO[ListItem.Label]</label>
                        <scroll>true</scroll>
                    </control>
                    <control type="button">
                        <label/>
                        <visible>false</visible>
                        <onfocus>SetProperty(submenu,show,home)</onfocus>
                    </control>
                </focusedlayout>
                <content>
                    <include condition="!Skin.HasSetting(DisableAllSubmenus)">skinshortcuts-submenu</include>
                </content>
            </control>
        </control>
    </include>

	<!-- hidden submenu to do count calculations -->
	<include name="hiddenSubmenu">
        <control type="list" id="4445">
            <width>1</width>
            <height>1</height>
            <pagecontrol/>
            <orientation>vertical</orientation>
            <itemlayout width="1" height="1">
            </itemlayout>
            <focusedlayout width="1" height="1">
            </focusedlayout>
            <content><include>skinshortcuts-submenu</include></content>
        </control>
    </include>
	
	<include name="MainMenuContent">
        <content>
            <include>skinshortcuts-mainmenu</include>
        </content>
    </include>

    <!-- Netflix Customhub Item -->
    <include name="netflix_customhub_item">
        <control type="group" id="20$PARAM[widgetid]">
            <visible>Skin.HasSetting(LockHubWidgets)</visible>
            <visible>Skin.String($PARAM[skinsetting].label)</visible>
            <width>100%</width>
            <height>40</height>
            <!-- panel bg option
            <control type="image">
                <texture border="5">diffuse/panel.png</texture>
                <colordiffuse>ViewDetailsPanelColor</colordiffuse>
                <visible>!Skin.HasSetting(HideWidgetPanelBackground)</visible>
            </control>
            -->
            <control type="textbox">
                <visible>String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle))</visible>
                <height>96%</height>
                <width>99%</width>
                <font>SubLabel</font>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_header_rightalign</include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_header_leftalign</include>
                <textcolor>ViewDetailsTextColor</textcolor>
                <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
                <label>$INFO[Skin.String($PARAM[skinsetting].label)]</label>
                <animation effect="slide" end="50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + !Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
                <animation effect="slide" end="-50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
            </control>
            <control type="textbox">
                <visible>!String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle))</visible>
                <height>96%</height>
                <width>99%</width>
                <font>SubLabel</font>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_header_rightalign</include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_header_leftalign</include>
                <textcolor>ViewDetailsTextColor</textcolor>
                <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
                <label>$LOCALIZE[31543] $INFO[Container($PARAM[widgetid]).ListItem.Property(similartitle)]</label>
                <animation effect="slide" end="50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + !Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
                <animation effect="slide" end="-50" time="0" condition="Container($PARAM[widgetid]).IsUpdating + Skin.HasSetting(WidgetAlignRight)">Conditional</animation>
            </control>
            <control type="multiimage">
                <width>100%</width>
                <height>36</height>
                <include condition="Skin.HasSetting(WidgetAlignRight)">widget_header_rightalign</include>
                <include condition="!Skin.HasSetting(WidgetAlignRight)">widget_header_leftalign</include>
                <aspectratio align="left">keep</aspectratio>
                <imagepath background="true">widgets/widgets-busy-loader/</imagepath>
                <timeperimage>35</timeperimage>
                <colordiffuse>SpinnerTextureColor</colordiffuse>
                <fadetime>0</fadetime>
                <visible>Container($PARAM[widgetid]).IsUpdating</visible>
            </control>
        </control>
        <control type="button" id="$PARAM[widgetid]4">
            <width>99%</width>
            <height>40</height>
            <align>left</align>
            <font>Reg32</font>
            <textoffsetx>65</textoffsetx>
            <label>$INFO[Skin.String($PARAM[skinsetting].label)]</label>
            <textcolor>ViewDetailsTextColor</textcolor>
            <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
            <onclick>RunScript(script.skinshortcuts,type=widgets&amp;showNone=true&amp;skinWidgetName=$PARAM[skinsetting].label&amp;skinWidgetTarget=$PARAM[skinsetting].target&amp;skinWidgetPath=$PARAM[skinsetting].path)</onclick>
            <texturenofocus/>
            <visible>Skin.String($PARAM[skinsetting].label) + !Skin.HasSetting(LockHubWidgets)</visible>
        </control>
        <control type="button" id="$PARAM[widgetid]5">
            <width>99%</width>
            <height>40</height>
            <align>left</align>
            <font>Reg32</font>
            <textoffsetx>65</textoffsetx>
            <label>31822</label>
            <textcolor>ViewDetailsTextColor</textcolor>
            <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
            <onclick>RunScript(script.skinshortcuts,type=widgets&amp;showNone=true&amp;skinWidgetName=$PARAM[skinsetting].label&amp;skinWidgetTarget=$PARAM[skinsetting].target&amp;skinWidgetPath=$PARAM[skinsetting].path)</onclick>
            <texturenofocus/>
            <visible>!Skin.String($PARAM[skinsetting].label) + !Skin.HasSetting(LockHubWidgets)</visible>
        </control>
        <control type="button" id="$PARAM[widgetid]6">
            <width>99%</width>
            <height>40</height>
            <align>left</align>
            <font>Reg24</font>
            <textoffsetx>65</textoffsetx>
            <label>[$ADDON[script.skinshortcuts 32025]]</label>
            <textcolor>ViewDetailsTextColor</textcolor>
            <shadowcolor>ViewDetailsTextShadowColor</shadowcolor>
            <onclick>Skin.SetString($PARAM[skinsetting].label)</onclick>
            <texturenofocus/>
            <visible>!Skin.HasSetting(LockHubWidgets) + Skin.String($PARAM[skinsetting].label) + String.IsEmpty(Container($PARAM[widgetid]).ListItem.Property(similartitle))</visible>
        </control>
        <control type="multiimage" id="$PARAM[widgetid]7">
            <top>0</top>
            <left>65</left>
            <width>36</width>
            <height>36</height>
            <aspectratio align="left">keep</aspectratio>
            <imagepath>widgets/widgets-busy-loader/</imagepath>
            <timeperimage>35</timeperimage>
            <colordiffuse>SpinnerTextureColor</colordiffuse>
            <fadetime>0</fadetime>
            <visible>Container($PARAM[widgetid]).IsUpdating + !Skin.HasSetting(LockHubWidgets)</visible>
        </control>
        <include condition="Skin.HasSetting(EnhancedHome_Circular)" content="netflix_widget_base_hub_circular" name="netflix_widget_base_hub_circular">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="skinsetting" value="$PARAM[skinsetting]" />
        </include>
        <include condition="!Skin.HasSetting(EnhancedHome_Circular)" content="netflix_widget_base_hub_noncircular" name="netflix_widget_base_hub_noncircular">
            <param name="widgetid" value="$PARAM[widgetid]" />
            <param name="widgetStyle" value="$PARAM[widgetStyle]" />
            <param name="skinsetting" value="$PARAM[skinsetting]" />
        </include>
    </include>

    <!-- hub widget base fixedlist -->
    <include name="netflix_widget_base_hub_noncircular">
        <control type="fixedlist" id="$PARAM[widgetid]">
            <width>100%</width>
            <focusposition>0</focusposition>
            <scrolltime tween="sine" easing="out">500</scrolltime>
            <oninfo>RunScript(script.skin.helper.service,action=showinfo)</oninfo>
            <onunfocus condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onunfocus>
            <onunfocus condition="Player.HasVideo + Skin.HasSetting(NetflixAutoTrailer) + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]">PlayerControl(Stop)</onunfocus>
            <orientation>horizontal</orientation>
            <animation condition="!Control.HasFocus(77777) + Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
                <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
                <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide"/>
                <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
            </animation>
            <animation time="100" effect="fade" start="0" end="100" reversible="false" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>
            <include name="$PARAM[widgetStyle]" content="$PARAM[widgetStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="widgetTags" value="WidgetTagOverlayAuto" />
                <param name="multiRows" value="false" />
            </include>
            <content target="$INFO[Skin.String($PARAM[skinsetting].target)]">$INFO[Skin.String($PARAM[skinsetting].path)]</content>
            <visible>Skin.String($PARAM[skinsetting].path)</visible>
        </control>
    </include>
	
    <!-- hub widget base wraplist -->
    
	<include name="netflix_widget_base_hub_circular">
        <control type="wraplist" id="$PARAM[widgetid]">
            <width>100%</width>
            <focusposition>0</focusposition>
            <scrolltime tween="sine" easing="out">500</scrolltime>
            <oninfo>RunScript(script.skin.helper.service,action=showinfo)</oninfo>
            <onunfocus condition="System.HasAlarm(trailer_delay)">CancelAlarm(trailer_delay,true)</onunfocus>
            <onunfocus condition="Player.HasVideo + Skin.HasSetting(NetflixAutoTrailer) + ![VideoPlayer.Content(movies) | VideoPlayer.Content(episodes) | VideoPlayer.Content(musicvideos) | VideoPlayer.Content(livetv)]">PlayerControl(Stop)</onunfocus>
            <orientation>horizontal</orientation>
            <animation condition="!Control.HasFocus(77777) + Skin.HasSetting(Widgets_Animation)" reversible="false" type="Visible">
                <effect center="960,540" delay="280" easing="in" end="100" start="98" time="180" tween="sine" type="zoom"/>
                <effect delay="280" easing="in" end="0,0" start="0,40" time="180" tween="sine" type="slide"/>
                <effect delay="280" easing="in" end="100" start="0" time="180" tween="sine" type="fade"/>
            </animation>
            <animation time="100" effect="fade" start="0" end="100" reversible="false" easing="inout" condition="!Skin.HasSetting(Widgets_Animation)">Visible</animation>
            <include name="$PARAM[widgetStyle]" content="$PARAM[widgetStyle]">
                <param name="widgetid" value="$PARAM[widgetid]" />
                <param name="widgetTags" value="WidgetTagOverlayAuto" />
                <param name="multiRows" value="false" />
            </include>
            <content target="$INFO[Skin.String($PARAM[skinsetting].target)]">$INFO[Skin.String($PARAM[skinsetting].path)]</content>
            <visible>Skin.String($PARAM[skinsetting].path)</visible>
        </control>
    </include>

    <!-- Netflix Items Movies -->
    <include name="netflix_items_movies">
        <!-- set custom spotlight content -->
        <control type="button" id="31793">
            <width>99%</width>
            <height>40</height>
            <align>left</align>
            <font>Reg32</font>
            <textoffsetx>65</textoffsetx>
            <textwidth>950</textwidth>
            <label>Set Custom Spotlight Content</label>
            <label2>$INFO[Skin.String(spotlightmovies.label)]</label2>
            <onclick condition="!Skin.String(spotlightmovies.label)">RunScript(script.skinshortcuts,type=widgets&amp;showNone=true&amp;skinWidgetName=spotlightmovies.label&amp;skinWidgetTarget=spotlightmovies.target&amp;skinWidgetPath=spotlightmovies.path)</onclick>
            <onclick condition="Skin.String(spotlightmovies.label)">Skin.Reset(spotlightmovies.label)</onclick>
            <onclick condition="Skin.String(spotlightmovies.path)">Skin.Reset(spotlightmovies.path)</onclick>
            <selected>Skin.String(spotlightmovies.label)</selected>
            <visible>!Skin.HasSetting(LockHubWidgets) + !Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(NetflixHomeDisableFirstRow)</visible>
        </control>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="510" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-movies-510" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="520" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-movies-520" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="530" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-movies-530" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="540" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-movies-540" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="550" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-movies-550" />
		</include>        
    </include>

    <!-- Netflix Items TVShows -->
    <include name="netflix_items_tvshows">
        <!-- set custom spotlight content -->
        <control type="button" id="31793">
            <width>99%</width>
            <height>40</height>
            <align>left</align>
            <font>Reg32</font>
            <textoffsetx>65</textoffsetx>
            <textwidth>950</textwidth>
            <label>Set Custom Spotlight Content</label>
            <label2>$INFO[Skin.String(spotlighttvshows.label)]</label2>
            <onclick condition="!Skin.String(spotlighttvshows.label)">RunScript(script.skinshortcuts,type=widgets&amp;showNone=true&amp;skinWidgetName=spotlighttvshows.label&amp;skinWidgetTarget=spotlighttvshows.target&amp;skinWidgetPath=spotlighttvshows.path)</onclick>
            <onclick condition="Skin.String(spotlighttvshows.label)">Skin.Reset(spotlighttvshows.label)</onclick>
            <onclick condition="Skin.String(spotlighttvshows.path)">Skin.Reset(spotlighttvshows.path)</onclick>
            <selected>Skin.String(spotlighttvshows.label)</selected>
            <visible>!Skin.HasSetting(LockHubWidgets) + !Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(NetflixHomeDisableFirstRow)</visible>
        </control>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="510" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-tvshows-510" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="520" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-tvshows-520" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="530" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-tvshows-530" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="540" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-tvshows-540" />
		</include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
			<param name="widgetid" value="550" />
            <param name="widgetStyle" value="widget_layout_default" />
			<param name="skinsetting" value="netflixhub-tvshows-550" />
		</include>
    </include>

    <!-- Netflix Items New -->
    <include name="netflix_items_new">
        <!-- set custom spotlight content -->
        <control type="button" id="31793">
            <width>99%</width>
            <height>40</height>
            <align>left</align>
            <font>Reg32</font>
            <textoffsetx>65</textoffsetx>
            <textwidth>950</textwidth>
            <label>Set Custom Spotlight Content</label>
            <label2>$INFO[Skin.String(spotlightnew.label)]</label2>
            <onclick condition="!Skin.String(spotlightnew.label)">RunScript(script.skinshortcuts,type=widgets&amp;showNone=true&amp;skinWidgetName=spotlightnew.label&amp;skinWidgetTarget=spotlightnew.target&amp;skinWidgetPath=spotlightnew.path)</onclick>
            <onclick condition="Skin.String(spotlightnew.label)">Skin.Reset(spotlightnew.label)</onclick>
            <onclick condition="Skin.String(spotlightnew.path)">Skin.Reset(spotlightnew.path)</onclick>
            <selected>Skin.String(spotlightnew.label)</selected>
            <visible>!Skin.HasSetting(LockHubWidgets) + !Skin.HasSetting(DisableSpotlightContent) + !Skin.HasSetting(NetflixHomeDisableFirstRow)</visible>
        </control>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="510" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-510" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="520" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-520" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="530" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-530" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="540" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-540" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="550" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-550" />
        </include>
    </include>

    <!-- Netflix Items My List -->
    <include name="netflix_items_mylist">
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="510" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-510" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="520" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-520" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="530" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-530" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="540" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-540" />
        </include>
        <include condition="true" content="netflix_customhub_item" name="netflix_customhub_item">
            <param name="widgetid" value="550" />
            <param name="widgetStyle" value="widget_layout_default" />
            <param name="skinsetting" value="netflixhub-new-550" />
        </include>
    </include>

    <include name="netflix_mainmenu_movies">
        <content target="videos">library://video/movies</content>
    </include>

    <include name="netflix_mainmenu_tvshows">
        <content target="videos">library://video/tvshows</content>
    </include>
</includes>